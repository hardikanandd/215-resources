<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>A short note on sorting</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="MSHTML 6.00.2800.1226" name=GENERATOR></HEAD>
<BODY background="A short note on sorting_files/whtgrain.jpg" 
onunload=spawntopfivewindow();>
<CENTER>




<H3 align=center>Sorting String Arrays - the easy way</H3><BR>
<H6 align=center>Written by and (C) 1999 Daniel Kovacs, All rights reserved</H6>
<P><U><I>Introduction</I></U>
<P>Over the past few weeks, I have received several e-mails asking "How do I 
sort an array of strings in C++?" Well, I though about it for a few minutes, and 
came up with a "modified bubble sort" that does the sort using the stricmp() 
function. (Note: for those of you who are new to C or C++, stricmp() is part of 
the String Library - string.h, and it means "String Compare Ignore Case"). 
stricmp() will return a value of 1, 0 or -1 depending on the <I>lexographic</I> 
nature of the string. These are the values you use to perform the sort.
<P><U><I>The Main Algorithm</I></U>
<P>As this can be incorperated as a seperate function or included in the 
function you are writing, I will include only the important parts of the 
algorithm. The rest will be left as an exercise.
<P><PRE>for(i = 0; i &lt; n-1; i++)
	for(j = n-1; j &gt; i; --j)
	{
		// Allocate some temp space
		if(stricmp(*data[j], *data[j-1]) &lt; 0)
		{
			char temp[80];
			strcpy(temp, *data[j]);
			strcpy(*data[j], *data[j-1]);
			strcpy(*data[j-1], temp);
		}
	}
</PRE>
<P>In this example, the variables i, j and n are cardinal integers, and n is the 
number of strings you are going to sort. Pretty simple!
<P><I><U>Complexity</I></U>
<P>At best, the complexity of this is O(n<SUP>2</SUP>). I used bubble sort 
because it is easy to understand, but this concept could be applied to any 
sorting algorithm. The only thing you need to be concerned about is (a) how the 
compare's are performed: stricmp() and strcmp() will produce vastly different 
results, and (b) swapping the strings.
<P><A 
href="index.htm"><I>Return to 
the index.</I></A>


</BODY></HTML>
